#include <DabbleESP32.h>
#include <ESP32Servo.h>

// Define PWM-capable GPIO pins for servo control
#define PIN_1 13  // âœ… PWM OK
#define PIN_2 4   //  âœ… PWM OK
#define PIN_3 14  // âœ… PWM OK
#define PIN_4 27  // âœ… PWM OK
#define PIN_5 26  // âœ… PWM OK
#define PIN_6 25  // âœ… PWM OK
#define PIN_7 33  // âœ… PWM OK
#define PIN_8 32  // âœ… PWM OK
#define PIN_9 19  // âœ… PWM OK (Replacing GPIO 35)
#define PIN_10 22 // âœ… PWM OK (Replacing GPIO 34)
#define PIN_11 5  // âœ… PWM OK
#define PIN_12 18 // âœ… PWM OK

// Servo definitions
Servo leftFrontA, leftFrontB;
Servo leftMiddleA, leftMiddleB;
Servo leftBackA, leftBackB;
Servo rightFrontA, rightFrontB;
Servo rightMiddleA, rightMiddleB;
Servo rightBackA, rightBackB;

// Things to know
// Servo label A - means left to right motion
// Servo label B - means up and down motion

// THIS IS ALL FOR SERVOS A
// NOT the direction of the left front leg motion it goes backward

// NOT the direction of middle left for right front leg motion

void setup() {
    Serial.begin(115200);

    // Attach servos to their respective pins
    rightFrontA.attach(PIN_5); //done
    rightFrontB.attach(PIN_6); // done
    rightMiddleA.attach(PIN_3); // done
    rightMiddleB.attach(PIN_4); // done
    rightBackA.attach(PIN_1); // done
    rightBackB.attach(PIN_2); // done
    leftFrontA.attach(PIN_11); // done
    leftFrontB.attach(PIN_12); // done
    leftMiddleA.attach(PIN_9); // done
    leftMiddleB.attach(PIN_10); // done
    leftBackA.attach(PIN_7); // done
    leftBackB.attach(PIN_8); // done

    Dabble.begin("ASME_ArachnoBot");  // Initialize Dabble Bluetooth

    // Initialize servos to 90Â° (neutral position)

    // left side B servos
    leftFrontB.write(90);
    leftMiddleB.write(90);
    leftBackB.write(90);

    // right side B servos
    rightFrontB.write(90);
    rightMiddleB.write(90);
    rightBackB.write(90);


    // left side A servos
    leftFrontA.write(60); 
    leftMiddleA.write(90);
    leftBackA.write(120);


    // right side A servos
    rightFrontA.write(120); 
    rightMiddleA.write(90);
    rightBackA.write(60);
    
delay(1000);
}


void loop() {
    Dabble.processInput();  // Process Dabble app inputs

    if (GamePad.isUpPressed()) {
        // start off on the right foot: lift
        rightFrontB.write(155);
        leftMiddleB.write(25);
        rightBackB.write(155);
        printf("right foot lift motion");
        delay(300);

        // move the three legs: forward
        rightFrontA.write(150);
        leftMiddleA.write(60);
        rightBackA.write(90);
        printf("right leg move the leg");
        delay(300);

        // put the legs down
        rightFrontB.write(90);
        leftMiddleB.write(90);
        rightBackB.write(90);
        printf("put the legs down");
        delay(300);
        
// lift the other legs so not dragging ass: lift
        leftFrontB.write(25);
        rightMiddleB.write(155);
        leftBackB.write(25);
        delay(300);

        // drag the legs back and lift the other legs: walk motion to initial state
        rightFrontA.write(120);
        leftMiddleA.write(90);
        rightBackA.write(60);
        printf("drag the leg back and lift the other legs");
        delay(300);

        // move left triangle legs: forward
        leftFrontA.write(30);
        rightMiddleA.write(120);
        leftBackA.write(90);
        printf("left leg move the leg");
        delay(300);

        // put the legs down: down
        leftFrontB.write(90);
        rightMiddleB.write(90);
        leftBackB.write(90);
        printf("left leg put the leg down");
        delay(300);

        // lift the other legs so they don't drag ass: lift
        rightFrontB.write(155);
        leftMiddleB.write(25);
        rightBackB.write(155);
        delay(300);
        
        // drag the legs back and lift other legs: walk motion to start initial state
        leftFrontA.write(60);
        rightMiddleA.write(90);
        leftBackA.write(120);
        printf("left leg drag the leg back");
        delay(300);
        
        // back to initial state
        rightFrontB.write(90);
        leftMiddleB.write(90);
        rightBackB.write(90);
        delay(300); 
    }






    // left turn
    if (GamePad.isLeftPressed()) {
        // lift first triangle
        rightFrontB.write(155);
        leftMiddleB.write(25);
        rightBackB.write(155);
        delay(300);

        // turn: left back, right forward
        rightFrontA.write(150);
        leftMiddleA.write(120);
        rightBackA.write(90);
        delay(300);

        // put down
        rightFrontB.write(90);
        leftMiddleB.write(90);
        rightBackB.write(90);
        delay(300);

        // lift second triangle
        leftFrontB.write(25);
        rightMiddleB.write(155);
        leftBackB.write(25);
        delay(300);

        // turn
        leftFrontA.write(90);
        rightMiddleA.write(120);
        leftBackA.write(120);
        delay(300);

        // put down
        leftFrontB.write(90);
        rightMiddleB.write(90);
        leftBackB.write(90);
        delay(300);

        // finalize position to calibrated neutral
        leftFrontA.write(60);
        rightMiddleA.write(90);
        leftBackA.write(120);
        rightFrontA.write(120);
        leftMiddleA.write(90);
        rightBackA.write(60);
        delay(300);
    }








    // left turn
    if (GamePad.isRightPressed()) {
        // lift first triangle
        rightFrontB.write(155);
        leftMiddleB.write(25);
        rightBackB.write(155);
        delay(300);

        // turn: left back, right forward
        rightFrontA.write(90);
        leftMiddleA.write(60);
        rightBackA.write(30);
        delay(300);

        // put down
        rightFrontB.write(90);
        leftMiddleB.write(90);
        rightBackB.write(90);
        delay(300);

        // lift second triangle
        leftFrontB.write(25);
        rightMiddleB.write(155);
        leftBackB.write(25);
        delay(300);

        // turn
        leftFrontA.write(30);
        rightMiddleA.write(60);
        leftBackA.write(60);
        delay(300);

        // put down
        leftFrontB.write(90);
        rightMiddleB.write(90);
        leftBackB.write(90);
        delay(300);

        // finalize position to calibrated neutral
        leftFrontA.write(60);
        rightMiddleA.write(90);
        leftBackA.write(120);
        rightFrontA.write(120);
        leftMiddleA.write(90);
        rightBackA.write(60);
        delay(300);
    }






    if (GamePad.isDownPressed()) {
        // start off on the right foot lift
        rightFrontB.write(155);
        leftMiddleB.write(25);
        rightBackB.write(155);
        printf("right foot lift motion");
        delay(300);

        // move the three legs
        rightFrontA.write(75);     //changed from 90 to 75 to reach back not as far to stabalize
        leftMiddleA.write(120);
        rightBackA.write(30);            //changed to 15 from 30 to reach back further(OLD)
        printf("right leg move the leg");
        delay(300);

        // put the legs down
        rightFrontB.write(90);
        leftMiddleB.write(90);
        rightBackB.write(90);
        printf("put the legs down");
        delay(300);
        
// lift the other legs so not dragging ass
        leftFrontB.write(25);
        rightMiddleB.write(155);
        leftBackB.write(25);
        delay(300);

        // drag the legs back and lift the other legs
        rightFrontA.write(105);              //changed from 120 to 105 to drag back not as far
        leftMiddleA.write(90);
        rightBackA.write(60);                 //changed from 60 to 45 to stay further back to stabalize(OLD)
        printf("drag the leg back and lift the other legs");
        delay(300);

        // move left triangle legs
        leftFrontA.write(90);                     //changed from 90 to 75 to reach back not as far
        rightMiddleA.write(60);
        leftBackA.write(150);                  //changed from 150 to 165 to reach back further(OLD)
        printf("left leg move the leg");
        delay(300);

        // put the legs down
        leftFrontB.write(90);
        rightMiddleB.write(90);
        leftBackB.write(90);
        printf("left leg put the leg down");
        delay(300);

        // lift the other legs so they don't drag ass
        rightFrontB.write(155);
        leftMiddleB.write(25);
        rightBackB.write(155);
        delay(300);
        
        // drag the legs back and lift other legs
        leftFrontA.write(75);                //changed from 60 to 75 to drag back not as far to stabalize
        rightMiddleA.write(90);
        leftBackA.write(120);  //changed from 120 to 135 so that it is better stabalized before other legs are put down(OLD)
        printf("left leg drag the leg back");
        delay(300);
        
        // back to initial state
        rightFrontB.write(90);
        leftMiddleB.write(90);
        rightBackB.write(90);

                  //KEEP BELOW INITILIZATIONS OR SPIDEY FUCKING DIES
        
        rightFrontA.write(120); 
        leftFrontA.write(60); 
        delay(300); 
    }







if (GamePad.isStartPressed()) {
// go back to initialization state
    leftFrontB.write(90);
    leftMiddleB.write(90);
    leftBackB.write(90);

    // right side B servos
    rightFrontB.write(90);
    rightMiddleB.write(90);
    rightBackB.write(90);


    // left side A servos
    leftFrontA.write(60); 
    leftMiddleA.write(90);
    leftBackA.write(120);


    // right side A servos
    rightFrontA.write(120); 
    rightMiddleA.write(90);
    rightBackA.write(60);
    
}






// NOTES: try not to run more than 4 Servos at once and use delays to ensure that it all doesn't run all at once

if (GamePad.isSelectPressed()) {
    int neutralLeftB = 90;
    int neutralRightB = 90;
    int liftLeftB = 25;
    int liftRightB = 155;

    // ðŸ’ƒ Step 1: Bounce all legs
    for (int i = 0; i < 3; i++) {
        leftFrontB.write(liftLeftB);
        leftMiddleB.write(liftLeftB);
        leftBackB.write(liftLeftB);
        rightFrontB.write(liftRightB);
        rightMiddleB.write(liftRightB);
        rightBackB.write(liftRightB);
        delay(300);

        leftFrontB.write(neutralLeftB);
        leftMiddleB.write(neutralLeftB);
        leftBackB.write(neutralLeftB);
        rightFrontB.write(neutralRightB);
        rightMiddleB.write(neutralRightB);
        rightBackB.write(neutralRightB);
        delay(300);
    }

    // ðŸ’ƒ Step 2: Sway side to side
    for (int i = 0; i < 2; i++) {
        leftFrontA.write(30);
        leftMiddleA.write(60);
        leftBackA.write(90);
        rightFrontA.write(150);
        rightMiddleA.write(120);
        rightBackA.write(90);
        delay(300);

        leftFrontA.write(90);
        leftMiddleA.write(120);
        leftBackA.write(150);
        rightFrontA.write(90);
        rightMiddleA.write(60);
        rightBackA.write(30);
        delay(300);
    }

    // ðŸ’ƒ Step 3: Alternate triangle leg lifts
    for (int i = 0; i < 2; i++) {
        // Lift one triangle
        leftFrontB.write(liftLeftB);
        rightMiddleB.write(liftRightB);
        leftBackB.write(liftLeftB);
        delay(300);
        leftFrontB.write(neutralLeftB);
        rightMiddleB.write(neutralRightB);
        leftBackB.write(neutralLeftB);
        delay(300);

        // Lift the other triangle
        rightFrontB.write(liftRightB);
        leftMiddleB.write(liftLeftB);
        rightBackB.write(liftRightB);
        delay(300);
        rightFrontB.write(neutralRightB);
        leftMiddleB.write(neutralLeftB);
        rightBackB.write(neutralRightB);
        delay(300);
    }

    // ðŸ’ƒ Step 4: Final pose
    leftFrontA.write(30);
    leftBackA.write(150);
    rightFrontA.write(150);
    rightBackA.write(30);
    delay(300);

    leftFrontB.write(liftLeftB);
    rightBackB.write(liftRightB);
    delay(300);

    // Reset to neutral
    leftFrontA.write(60);
    leftMiddleA.write(90);
    leftBackA.write(120);
    rightFrontA.write(120);
    rightMiddleA.write(90);
    rightBackA.write(60);
    delay(300);

    leftFrontB.write(90);
    leftMiddleB.write(90);
    leftBackB.write(90);
    rightFrontB.write(90);
    rightMiddleB.write(90);
    rightBackB.write(90);
}

if (GamePad.isCrossPressed()) {
    // Define calibrated neutral B positions
    int neutralLeftB = 90;
    int neutralRightB = 90;
    int liftLeftB = 25;
    int liftRightB = 155;

    // Left to right wave motion (B servos only)
    
    leftFrontB.write(liftLeftB);
    delay(150);
    leftFrontB.write(neutralLeftB);
    
    leftMiddleB.write(liftLeftB);
    delay(150);
    leftMiddleB.write(neutralLeftB);
    
    leftBackB.write(liftLeftB);
    delay(150);
    leftBackB.write(neutralLeftB);

    rightBackB.write(liftRightB);
    delay(150);
    rightBackB.write(neutralRightB);

    rightMiddleB.write(liftRightB);
    delay(150);
    rightMiddleB.write(neutralRightB);

    rightFrontB.write(liftRightB);
    delay(150);
    rightFrontB.write(neutralRightB);
}



if (GamePad.isTrianglePressed()) {
    // Step 1: Lower the spider (crouch)
    leftFrontB.write(120);
    leftMiddleB.write(120);
    leftBackB.write(120);
    rightFrontB.write(60);
    rightMiddleB.write(60);
    rightBackB.write(60);
    delay(300);

    // Step 2: Pounce forward with a quick A servo shift
    leftFrontA.write(30);
    leftMiddleA.write(60);
    leftBackA.write(90);
    rightFrontA.write(150);
    rightMiddleA.write(120);
    rightBackA.write(90);
    delay(200);

    // Step 3: Raise the spider back up (reset B servos)
    leftFrontB.write(90);
    leftMiddleB.write(90);
    leftBackB.write(90);
    rightFrontB.write(90);
    rightMiddleB.write(90);
    rightBackB.write(90);
    delay(300);

    // Step 4: Return to neutral stance
    leftFrontA.write(60);
    leftMiddleA.write(90);
    leftBackA.write(120);
    rightFrontA.write(120);
    rightMiddleA.write(90);
    rightBackA.write(60);
}


if (GamePad.isCirclePressed()) {
    int neutral = 90;

    int frontLowL = 120;
    int frontLowR = 60;

    int midMidL = 105;
    int midMidR = 75;

    int backHighL = 25;
    int backHighR = 155;

    int stepDelay = 10;  // delay between small angle changes

    // ---- FRONT DIP ----
    for (int i = 90; i <= frontLowL; i++) {
        leftFrontB.write(i);
        rightFrontB.write(180 - i);
        delay(stepDelay);
    }

    // ---- MIDDLE DIP ----
    for (int i = 90; i <= midMidL; i++) {
        leftMiddleB.write(i);
        rightMiddleB.write(180 - i);
        delay(stepDelay);
    }

    // ---- BACK LIFT ----
    for (int i = 90; i >= backHighL; i--) {
        leftBackB.write(i);
        rightBackB.write(180 - i);
        delay(stepDelay);
    }

    // ---- BACK TO MIDDLE ----
    for (int i = backHighL; i <= 90; i++) {
        leftBackB.write(i);
        rightBackB.write(180 - i);
        delay(stepDelay);
    }

    for (int i = midMidL; i >= 90; i--) {
        leftMiddleB.write(i);
        rightMiddleB.write(180 - i);
        delay(stepDelay);
    }

    for (int i = frontLowL; i >= 90; i--) {
        leftFrontB.write(i);
        rightFrontB.write(180 - i);
        delay(stepDelay);
    }
}






if (GamePad.isSquarePressed()) {

        // start off on the right foot lift
        leftMiddleB.write(25);
        rightBackB.write(155);
        printf("right foot lift motion");
        delay(300);

        // move the three legs
        leftMiddleA.write(120);
        rightBackA.write(30);            
        printf("right leg move the leg");
        delay(300);

        // put the legs down
        leftMiddleB.write(90);
        rightBackB.write(90);
        printf("put the legs down");
        delay(300);
        
// lift the other legs so not dragging ass
        rightMiddleB.write(155);
        leftBackB.write(25);
        delay(300);

        rightMiddleA.write(60);
        leftBackA.write(150);                  
        printf("left leg move the leg");
        delay(300);

        // put the legs down
        rightMiddleB.write(90);
        leftBackB.write(90);
        printf("left leg put the leg down");
        delay(300);

       //lift front leg
       rightFrontB.write(155);
       delay(300);

       //move front leg
       rightFrontA.write(60);
       delay(300);

       //front leg down
       rightFrontB.write(90);
       delay(300);

       //lift front leg
       leftFrontB.write(25);
       delay(300);

       //move front leg
       leftFrontA.write(120);
       delay(300);

       //front leg down
       leftFrontB.write(90);
       delay(300);
       
      //return to normal
      leftFrontA.write(60);
      leftMiddleA.write(90);
      leftBackA.write(120);
      rightFrontA.write(120);
      rightMiddleA.write(90);
      rightBackA.write(60);
}
}











