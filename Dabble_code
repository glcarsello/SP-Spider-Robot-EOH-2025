#include <DabbleESP32.h>
#include <ESP32Servo.h>

// Define PWM-capable GPIO pins for servo control
#define PIN_1 13  // ✅ PWM OK
#define PIN_2 4   //  ✅ PWM OK
#define PIN_3 14  // ✅ PWM OK
#define PIN_4 27  // ✅ PWM OK
#define PIN_5 26  // ✅ PWM OK
#define PIN_6 25  // ✅ PWM OK
#define PIN_7 33  // ✅ PWM OK
#define PIN_8 32  // ✅ PWM OK
#define PIN_9 19  // ✅ PWM OK (Replacing GPIO 35)
#define PIN_10 22 // ✅ PWM OK (Replacing GPIO 34)
#define PIN_11 5  // ✅ PWM OK
#define PIN_12 18 // ✅ PWM OK

// Servo definitions
Servo leftFrontA, leftFrontB;
Servo leftMiddleA, leftMiddleB;
Servo leftBackA, leftBackB;
Servo rightFrontA, rightFrontB;
Servo rightMiddleA, rightMiddleB;
Servo rightBackA, rightBackB;

// Things to know
// Servo label A - means left to right motion
// Servo label B - means up and down motion

// THIS IS ALL FOR SERVOS A
// NOT the direction of the left front leg motion it goes backward

// NOT the direction of middle left for right front leg motion

void setup() {
    Serial.begin(115200);

    // Attach servos to their respective pins
    rightFrontA.attach(PIN_5); //done
    rightFrontB.attach(PIN_6); // done
    rightMiddleA.attach(PIN_3); // done
    rightMiddleB.attach(PIN_4); // done
    rightBackA.attach(PIN_1); // done
    rightBackB.attach(PIN_2); // done
    leftFrontA.attach(PIN_11); // done
    leftFrontB.attach(PIN_12); // done
    leftMiddleA.attach(PIN_9); // done
    leftMiddleB.attach(PIN_10); // done
    leftBackA.attach(PIN_7); // done
    leftBackB.attach(PIN_8); // done

    Dabble.begin("ASME_ArachnoBot");  // Initialize Dabble Bluetooth

    // Initialize servos to 90° (neutral position)

    // left side B servos
    leftFrontB.write(90);
    leftMiddleB.write(90);
    leftBackB.write(90);

    // right side B servos
    rightFrontB.write(90);
    rightMiddleB.write(90);
    rightBackB.write(90);


    // left side A servos
    leftFrontA.write(60); 
    leftMiddleA.write(90);
    leftBackA.write(120);


    // right side A servos
    rightFrontA.write(120); 
    rightMiddleA.write(90);
    rightBackA.write(60);
    
delay(1000);
}


void loop() {
    Dabble.processInput();  // Process Dabble app inputs

    if (GamePad.isUpPressed()) {
        // start off on the right foot: lift
        rightFrontB.write(155);
        leftMiddleB.write(25);
        rightBackB.write(155);
        printf("right foot lift motion");
        delay(300);

        // move the three legs: forward
        rightFrontA.write(150);
        leftMiddleA.write(60);
        rightBackA.write(90);
        printf("right leg move the leg");
        delay(300);

        // put the legs down
        rightFrontB.write(90);
        leftMiddleB.write(90);
        rightBackB.write(90);
        printf("put the legs down");
        delay(300);
        
// lift the other legs so not dragging ass: lift
        leftFrontB.write(25);
        rightMiddleB.write(155);
        leftBackB.write(25);
        delay(300);

        // drag the legs back and lift the other legs: walk motion to initial state
        rightFrontA.write(120);
        leftMiddleA.write(90);
        rightBackA.write(60);
        printf("drag the leg back and lift the other legs");
        delay(300);

        // move left triangle legs: forward
        leftFrontA.write(30);
        rightMiddleA.write(120);
        leftBackA.write(90);
        printf("left leg move the leg");
        delay(300);

        // put the legs down: down
        leftFrontB.write(90);
        rightMiddleB.write(90);
        leftBackB.write(90);
        printf("left leg put the leg down");
        delay(300);

        // lift the other legs so they don't drag ass: lift
        rightFrontB.write(155);
        leftMiddleB.write(25);
        rightBackB.write(155);
        delay(300);
        
        // drag the legs back and lift other legs: walk motion to start initial state
        leftFrontA.write(60);
        rightMiddleA.write(90);
        leftBackA.write(120);
        printf("left leg drag the leg back");
        delay(300);
        
        // back to initial state
        rightFrontB.write(90);
        leftMiddleB.write(90);
        rightBackB.write(90);
        delay(300); 
    }






    // left turn
    if (GamePad.isLeftPressed()) {
        // lift first triangle
        rightFrontB.write(155);
        leftMiddleB.write(25);
        rightBackB.write(155);
        delay(300);

        // turn: left back, right forward
        rightFrontA.write(150);
        leftMiddleA.write(120);
        rightBackA.write(90);
        delay(300);

        // put down
        rightFrontB.write(90);
        leftMiddleB.write(90);
        rightBackB.write(90);
        delay(300);

        // lift second triangle
        leftFrontB.write(25);
        rightMiddleB.write(155);
        leftBackB.write(25);
        delay(300);

        // turn
        leftFrontA.write(90);
        rightMiddleA.write(120);
        leftBackA.write(120);
        delay(300);

        // put down
        leftFrontB.write(90);
        rightMiddleB.write(90);
        leftBackB.write(90);
        delay(300);

        // finalize position to calibrated neutral
        leftFrontA.write(60);
        rightMiddleA.write(90);
        leftBackA.write(120);
        rightFrontA.write(120);
        leftMiddleA.write(90);
        rightBackA.write(60);
        delay(300);
    }








    // left turn
    if (GamePad.isRightPressed()) {
        // lift first triangle
        rightFrontB.write(155);
        leftMiddleB.write(25);
        rightBackB.write(155);
        delay(300);

        // turn: left back, right forward
        rightFrontA.write(90);
        leftMiddleA.write(60);
        rightBackA.write(30);
        delay(300);

        // put down
        rightFrontB.write(90);
        leftMiddleB.write(90);
        rightBackB.write(90);
        delay(300);

        // lift second triangle
        leftFrontB.write(25);
        rightMiddleB.write(155);
        leftBackB.write(25);
        delay(300);

        // turn
        leftFrontA.write(30);
        rightMiddleA.write(60);
        leftBackA.write(60);
        delay(300);

        // put down
        leftFrontB.write(90);
        rightMiddleB.write(90);
        leftBackB.write(90);
        delay(300);

        // finalize position to calibrated neutral
        leftFrontA.write(60);
        rightMiddleA.write(90);
        leftBackA.write(120);
        rightFrontA.write(120);
        leftMiddleA.write(90);
        rightBackA.write(60);
        delay(300);
    }






    if (GamePad.isDownPressed()) {
        // start off on the right foot lift
        rightFrontB.write(155);
        leftMiddleB.write(25);
        rightBackB.write(155);
        printf("right foot lift motion");
        delay(300);

        // move the three legs
        rightFrontA.write(90);
        leftMiddleA.write(120);
        rightBackA.write(30);
        printf("right leg move the leg");
        delay(300);

        // put the legs down
        rightFrontB.write(90);
        leftMiddleB.write(90);
        rightBackB.write(90);
        printf("put the legs down");
        delay(300);
        
// lift the other legs so not dragging ass
        leftFrontB.write(25);
        rightMiddleB.write(155);
        leftBackB.write(25);
        delay(300);

        // drag the legs back and lift the other legs
        rightFrontA.write(120);
        leftMiddleA.write(90);
        rightBackA.write(60);
        printf("drag the leg back and lift the other legs");
        delay(300);

        // move left triangle legs
        leftFrontA.write(90);
        rightMiddleA.write(60);
        leftBackA.write(150);
        printf("left leg move the leg");
        delay(300);

        // put the legs down
        leftFrontB.write(90);
        rightMiddleB.write(90);
        leftBackB.write(90);
        printf("left leg put the leg down");
        delay(300);

        // lift the other legs so they don't drag ass
        rightFrontB.write(155);
        leftMiddleB.write(25);
        rightBackB.write(155);
        delay(300);
        
        // drag the legs back and lift other legs
        leftFrontA.write(60);
        rightMiddleA.write(90);
        leftBackA.write(120);
        printf("left leg drag the leg back");
        delay(300);
        
        // back to initial state
        rightFrontB.write(90);
        leftMiddleB.write(90);
        rightBackB.write(90);
        delay(300); 
    }










if (GamePad.isStartPressed()) {
// go back to initialization state
    leftFrontB.write(90);
    leftMiddleB.write(90);
    leftBackB.write(90);

    // right side B servos
    rightFrontB.write(90);
    rightMiddleB.write(90);
    rightBackB.write(90);


    // left side A servos
    leftFrontA.write(60); 
    leftMiddleA.write(90);
    leftBackA.write(120);


    // right side A servos
    rightFrontA.write(120); 
    rightMiddleA.write(90);
    rightBackA.write(60);
    
}






// NOTES: try not to run more than 4 Servos at once and use delays to ensure that it all doesn't run all at once

if (GamePad.isCrossPressed()) {
    // Define calibrated neutral B positions
    int neutralLeftB = 90;
    int neutralRightB = 90;
    int liftLeftB = 25;
    int liftRightB = 155;

    // Left to right wave motion (B servos only)
    
    leftFrontB.write(liftLeftB);
    delay(150);
    leftFrontB.write(neutralLeftB);
    
    leftMiddleB.write(liftLeftB);
    delay(150);
    leftMiddleB.write(neutralLeftB);
    
    leftBackB.write(liftLeftB);
    delay(150);
    leftBackB.write(neutralLeftB);

    rightBackB.write(liftRightB);
    delay(150);
    rightBackB.write(neutralRightB);

    rightMiddleB.write(liftRightB);
    delay(150);
    rightMiddleB.write(neutralRightB);

    rightFrontB.write(liftRightB);
    delay(150);
    rightFrontB.write(neutralRightB);
}


if (GamePad.isCirclePressed()) {
    leftMiddleA.write(130);  // Move left front servo A to 90 degrees
    leftMiddleB.write(130);
    
}

if (GamePad.isTrianglePressed()) {
    rightBackA.write(130);  // Move left front servo A to 90 degrees
    rightBackB.write(130);
}


if (GamePad.isSquarePressed()) {
    leftBackA.write(130);  // Move left front servo A to 90 degrees
    leftBackB.write(130);
}

}

